---------------------------------------------------
-- Sheet: VGA-DRIVER
-- RefDes: 
-- Part Number: XC7A35T
-- Generated By: Multisim
--
-- Author: ag20751
-- Date: Tuesday, January 11 14:11:55, 2022
---------------------------------------------------

---------------------------------------------------
-- Use: This file defines the top-level of the design
-- Use with the exported package file
---------------------------------------------------
library ieee;
use ieee.std_logic_1164.ALL;
use ieee.numeric_std.ALL;

library work;
use work.vga_pkg.ALL;


entity VGA0DRIVER is
	port (

		CLK : in std_logic;
		vgaRed0 : out std_logic;
		vgaRed1 : out std_logic;
		vgaRed2 : out std_logic;
		vgaRed3 : out std_logic;
		vgaBlue0 : out std_logic;
		vgaBlue1 : out std_logic;
		vgaBlue2 : out std_logic;
		vgaBlue3 : out std_logic;
		vgaGreen0 : out std_logic;
		vgaGreen1 : out std_logic;
		vgaGreen2 : out std_logic;
		vgaGreen3 : out std_logic;
		Hsync : out std_logic;
		Vsync : out std_logic;
		AN0 : out std_logic;
		AN2 : out std_logic;
		AN1 : out std_logic;
		AN3 : out std_logic;
		CA : out std_logic;
		CB : out std_logic;
		CC : out std_logic;
		CD : out std_logic;
		CE : out std_logic;
		CF : out std_logic;
		CG : out std_logic;
		SW0 : in std_logic;
		SW4 : in std_logic;
		SW8 : in std_logic;
		SW1 : in std_logic;
		SW2 : in std_logic;
		SW3 : in std_logic;
		SW5 : in std_logic;
		SW6 : in std_logic;
		SW7 : in std_logic;
		SW9 : in std_logic;
		SW10 : in std_logic;
		SW11 : in std_logic;
		SW12 : in std_logic;
		SW13 : in std_logic;
		SW14 : in std_logic;
		SW15 : in std_logic
	);
end VGA0DRIVER;


architecture behavioral of VGA0DRIVER is


	component AUTO_IBUF
		port(
		I : in std_logic;
		O : out std_logic
	);
	end component;

	component AUTO_OBUF
		port(
		I : in std_logic;
		O : out std_logic
	);
	end component;

	component BUF_NI
		port (
    A : in STD_LOGIC := 'X';
    Y : out STD_LOGIC := 'U'
  );
	end component;

	component CNTR_4BIN_S_NI
		port( 
  LOAD: in STD_LOGIC;
  CLR: in STD_LOGIC;
  ENP: in STD_LOGIC; 
  ENT: in STD_LOGIC;
  CLK: in STD_LOGIC;
  A :in STD_LOGIC;
  B :in STD_LOGIC;
  C :in STD_LOGIC;
  D :in STD_LOGIC;
  RCO : out STD_LOGIC;
  QA : out STD_LOGIC;
  QB : out STD_LOGIC;
  QC : out STD_LOGIC;
  QD : out STD_LOGIC
 );
	end component;

	component CNTR_7BIN_NI
		Port ( 
   MR : in  STD_LOGIC;
   CP : in  STD_LOGIC;
   Q1 : out  STD_LOGIC;
   Q2 : out  STD_LOGIC;
   Q3 : out  STD_LOGIC;
   Q4 : out  STD_LOGIC;
   Q5 : out  STD_LOGIC;
   Q6 : out  STD_LOGIC;
   Q7 : out  STD_LOGIC
 );
	end component;

	component CNTR_BCD_S_NI
		port( 
  LOAD: in std_logic;
  CLR: in std_logic;
  ENP: in std_logic; 
  ENT: in std_logic;
  CLK: in std_logic;
  A:in STD_LOGIC;
  B:in STD_LOGIC;
  C:in STD_LOGIC;
  D:in STD_LOGIC;
  RCO: out STD_LOGIC;
  QA: out STD_LOGIC;
  QB: out STD_LOGIC;
  QC: out STD_LOGIC;
  QD: out STD_LOGIC
 );
	end component;

	component COMP_4_NI
		port (
   B3 : in STD_LOGIC := 'X';
   B2 : in STD_LOGIC := 'X';
   B1 : in STD_LOGIC := 'X';
   B0 : in STD_LOGIC := 'X';
   A3 : in STD_LOGIC := 'X';
   A2 : in STD_LOGIC := 'X';
   A1 : in STD_LOGIC := 'X';
   A0 : in STD_LOGIC := 'X';
   AGTB : in STD_LOGIC := 'X';
   AEQB : in STD_LOGIC := 'X';
   ALTB : in STD_LOGIC := 'X';
   OAGTB : out STD_LOGIC := 'U';
   OAEQB : out STD_LOGIC := 'U';
   OALTB : out STD_LOGIC := 'U'
    );
	end component;

	component DEC2_4_NI
		port (
 A : in STD_LOGIC;
 B : in STD_LOGIC;
 Y0 : out STD_LOGIC;
 Y1 : out STD_LOGIC;
 Y2 : out STD_LOGIC;
 Y3 : out STD_LOGIC;
 EN: in  STD_LOGIC
 );
	end component;

	component DEC_BCD_7_NI
		port (
  A : in STD_LOGIC;
  B : in STD_LOGIC;
  C : in STD_LOGIC;
  D : in STD_LOGIC;
  LT : in STD_LOGIC;
  RBI : in STD_LOGIC;
  BI : in STD_LOGIC;
  Y0 : out STD_LOGIC;
  Y1 : out STD_LOGIC;
  Y2 : out STD_LOGIC;
  Y3 : out STD_LOGIC;
  Y4 : out STD_LOGIC;
  Y5 : out STD_LOGIC;
  Y6 : out STD_LOGIC
 );
	end component;

	component DIGITAL_HIGH_NI
		Port ( 
  Y : out  STD_LOGIC:='1'
 );
	end component;

	component DIGITAL_LOW_NI
		Port ( 
  Y : out  STD_LOGIC:='0'
 );
	end component;

	component FF_D_CO_NI
		Port ( D : in  STD_LOGIC;
           CLK : in  STD_LOGIC;
           Q : out  STD_LOGIC;
           Qneg : out  STD_LOGIC);
	end component;

	component FF_JK_NSCLR_CO_NI
		port (
   J: in STD_LOGIC;
    K: in STD_LOGIC;
    CLK : in STD_LOGIC;  
    PR: in STD_LOGIC;
    CLR: in STD_LOGIC;
    Q : out STD_LOGIC;
    Qneg : out STD_LOGIC
  );
	end component;

	component FF_T_CLR_CO_NI
		port (
    T: in STD_LOGIC;
    CLK : in STD_LOGIC;
    CLR : in STD_LOGIC;
     Q : out STD_LOGIC;
     Qneg : out STD_LOGIC
 );
	end component;

	component INV_NI
		port (
    A : in STD_LOGIC := 'X';
    Y : out STD_LOGIC := 'U'
  );
	end component;

	component MUX4_1_NI
		port (
  Y : out STD_LOGIC;
  I0 : in STD_LOGIC;
  I1 : in STD_LOGIC;
  I2 : in STD_LOGIC;
  I3 : in STD_LOGIC;
  S0 : in STD_LOGIC;
  S1 : in STD_LOGIC;
  EN : in STD_LOGIC
 );
	end component;

	component MUX8_1_NI
		port (
   Y : out STD_LOGIC;
   D0 : in STD_LOGIC;
   D1 : in STD_LOGIC;
   D2 : in STD_LOGIC;
   D3 : in STD_LOGIC;
   D4 : in STD_LOGIC;
   D5 : in STD_LOGIC;
   D6 : in STD_LOGIC;
   D7 : in STD_LOGIC;
    A : in STD_LOGIC;
    B : in STD_LOGIC;
    C : in STD_LOGIC;
    G : in STD_LOGIC
  );
	end component;

	component OR2_NI
		port (
    B : in STD_LOGIC := 'X';
    A : in STD_LOGIC := 'X';
    Y : out STD_LOGIC := 'U'
  );
	end component;

	component OR7_NI
		port (
    G : in STD_LOGIC := 'X';
    F : in STD_LOGIC := 'X';
    E : in STD_LOGIC := 'X';
    D : in STD_LOGIC := 'X';
    C : in STD_LOGIC := 'X';
    B : in STD_LOGIC := 'X';
    A : in STD_LOGIC := 'X';
    Y : out STD_LOGIC := 'U'
  );
	end component;
	signal \1\ : std_logic;
	signal \PLD23/bit7\ : std_logic;
	signal \PLD25/S11\ : std_logic;
	signal \PLD23/VGA_RED\ : std_logic;
	signal \PLD25/C2\ : std_logic;
	signal \PLD1/CLK\ : std_logic;
	signal \PLD25/S15\ : std_logic;
	signal \PLD23/bit3\ : std_logic;
	signal \PLD23/VGA_BLUE\ : std_logic;
	signal \PLD25/S1\ : std_logic;
	signal \PLD23/bit4\ : std_logic;
	signal \PLD25/S5\ : std_logic;
	signal \PLD14/vblank\ : std_logic;
	signal \PLD23/VGA_GREEN\ : std_logic;
	signal \PLD14/Hsync\ : std_logic;
	signal \PLD25/S6\ : std_logic;
	signal \PLD25/S8\ : std_logic;
	signal \PLD25/C6\ : std_logic;
	signal \PLD1/CLOCKA\ : std_logic;
	signal \PLD23/bit8\ : std_logic;
	signal \PLD25/C7\ : std_logic;
	signal \PLD14/hblank\ : std_logic;
	signal \PLD14/Vsync\ : std_logic;
	signal \PLD25/A3\ : std_logic;
	signal \PLD25/A2\ : std_logic;
	signal \PLD23/h_complete\ : std_logic;
	signal \PLD23/bit6\ : std_logic;
	signal \PLD23/bit9\ : std_logic;
	signal \PLD25/A1\ : std_logic;
	signal \PLD25/S9\ : std_logic;
	signal \PLD25/C5\ : std_logic;
	signal \PLD25/S0\ : std_logic;
	signal \PLD25/S14\ : std_logic;
	signal \PLD23/bit5\ : std_logic;
	signal \PLD23/bit2\ : std_logic;
	signal \PLD25/S12\ : std_logic;
	signal \PLD23/bit10\ : std_logic;
	signal \PLD1/CLOCKB\ : std_logic;
	signal \PLD25/C4\ : std_logic;
	signal \PLD23/bit1\ : std_logic;
	signal \PLD23/EN\ : std_logic;
	signal \PLD25/S3\ : std_logic;
	signal \PLD25/S2\ : std_logic;
	signal \PLD25/S7\ : std_logic;
	signal \PLD25/S4\ : std_logic;
	signal \PLD25/C3\ : std_logic;
	signal \PLD25/A4\ : std_logic;
	signal \PLD25/S10\ : std_logic;
	signal \PLD25/C1\ : std_logic;
	signal \PLD25/S13\ : std_logic;
	signal \PLD1/CLOCKC\ : std_logic;
	signal \3\ : std_logic;
	signal \2\ : std_logic;
	signal \4\ : std_logic;
	signal \9\ : std_logic;
	signal \8\ : std_logic;
	signal \6\ : std_logic;
	signal \10\ : std_logic;
	signal \5\ : std_logic;
	signal \11\ : std_logic;
	signal \7\ : std_logic;
	signal \179\ : std_logic;
	signal \177\ : std_logic;
	signal \180\ : std_logic;
	signal \176\ : std_logic;
	signal \178\ : std_logic;
	signal \174\ : std_logic;
	signal \172\ : std_logic;
	signal \173\ : std_logic;
	signal \175\ : std_logic;
	signal \PLD6/bit6\ : std_logic;
	signal \PLD6/bit1\ : std_logic;
	signal \PLD6/bit5\ : std_logic;
	signal \PLD6/bit8\ : std_logic;
	signal \PLD6/bit2\ : std_logic;
	signal \PLD6/bit3\ : std_logic;
	signal \PLD6/bit4\ : std_logic;
	signal \PLD6/bit9\ : std_logic;
	signal \PLD6/bit7\ : std_logic;
	signal \PLD6/bit10\ : std_logic;
	signal \PLD4/B5\ : std_logic;
	signal \PLD3/B1\ : std_logic;
	signal \PLD7/OAGTB\ : std_logic;
	signal \PLD7/B6\ : std_logic;
	signal \PLD4/OALTB\ : std_logic;
	signal \PLD4/B1\ : std_logic;
	signal \PLD5/B1\ : std_logic;
	signal \PLD5/OAGTB\ : std_logic;
	signal \PLD3/B8\ : std_logic;
	signal \PLD5/B5\ : std_logic;
	signal \PLD7/B1\ : std_logic;
	signal \PLD7/OAEQB\ : std_logic;
	signal \64\ : std_logic;
	signal \63\ : std_logic;
	signal \PLD7/OALTB\ : std_logic;
	signal \PLD4/OAEQB\ : std_logic;
	signal \PLD3/OAGTB\ : std_logic;
	signal \62\ : std_logic;
	signal \PLD5/OAEQB\ : std_logic;
	signal \PLD3/OAEQB\ : std_logic;
	signal \65\ : std_logic;
	signal \PLD5/OALTB\ : std_logic;
	signal \66\ : std_logic;
	signal \PLD4/OAGTB\ : std_logic;
	signal \PLD3/OALTB\ : std_logic;
	signal \PLD9/B6\ : std_logic;
	signal \69\ : std_logic;
	signal \PLD12/B1\ : std_logic;
	signal \PLD10/B1\ : std_logic;
	signal \PLD10/B2\ : std_logic;
	signal \PLD9/B1\ : std_logic;
	signal \PLD11/B1\ : std_logic;
	signal \PLD11/B3\ : std_logic;
	signal \PLD12/B4\ : std_logic;
	signal \PLD12/OALTB\ : std_logic;
	signal \PLD11/OAEQB\ : std_logic;
	signal \PLD10/OALTB\ : std_logic;
	signal \68\ : std_logic;
	signal \PLD11/OAGTB\ : std_logic;
	signal \PLD10/OAEQB\ : std_logic;
	signal \PLD12/OAEQB\ : std_logic;
	signal \PLD8/CLR\ : std_logic;
	signal \PLD11/OALTB\ : std_logic;
	signal \PLD10/OAGTB\ : std_logic;
	signal \71\ : std_logic;
	signal \PLD9/OAEQB\ : std_logic;
	signal \PLD9/OALTB\ : std_logic;
	signal \67\ : std_logic;
	signal \PLD9/OAGTB\ : std_logic;
	signal \70\ : std_logic;
	signal \PLD12/OAGTB\ : std_logic;
	signal \PLD20/B1\ : std_logic;
	signal \PLD21/B1\ : std_logic;
	signal \58\ : std_logic;
	signal \PLD19/B5\ : std_logic;
	signal \PLD20/B6\ : std_logic;
	signal \PLD16/B1\ : std_logic;
	signal \PLD19/B1\ : std_logic;
	signal \PLD17/B5\ : std_logic;
	signal \PLD17/B1\ : std_logic;
	signal \PLD18/B1\ : std_logic;
	signal \86\ : std_logic;
	signal \PLD15/B1\ : std_logic;
	signal \PLD17/OAGTB\ : std_logic;
	signal \87\ : std_logic;
	signal \PLD20/OAEQB\ : std_logic;
	signal \PLD21/B5\ : std_logic;
	signal \PLD21/OAGTB\ : std_logic;
	signal \PLD16/OALTB\ : std_logic;
	signal \PLD20/OALTB\ : std_logic;
	signal \PLD17/OAEQB\ : std_logic;
	signal \PLD20/OAGTB\ : std_logic;
	signal \PLD18/OAEQB\ : std_logic;
	signal \PLD15/OAEQB\ : std_logic;
	signal \PLD16/B6\ : std_logic;
	signal \PLD18/B7\ : std_logic;
	signal \PLD15/B5\ : std_logic;
	signal \PLD19/OAGTB\ : std_logic;
	signal \PLD16/OAEQB\ : std_logic;
	signal \PLD19/OALTB\ : std_logic;
	signal \PLD19/OAEQB\ : std_logic;
	signal \PLD18/OALTB\ : std_logic;
	signal \PLD18/OAGTB\ : std_logic;
	signal \85\ : std_logic;
	signal \PLD21/OAEQB\ : std_logic;
	signal \20\ : std_logic;
	signal \PLD15/OAGTB\ : std_logic;
	signal \PLD17/OALTB\ : std_logic;
	signal \PLD15/OALTB\ : std_logic;
	signal \PLD21/OALTB\ : std_logic;
	signal \84\ : std_logic;
	signal \PLD16/OAGTB\ : std_logic;
	signal \109\ : std_logic;
	signal \107\ : std_logic;
	signal \108\ : std_logic;
	signal \105\ : std_logic;
	signal \106\ : std_logic;
	signal \103\ : std_logic;
	signal \104\ : std_logic;
	signal \95\ : std_logic;
	signal \93\ : std_logic;
	signal \94\ : std_logic;
	signal \91\ : std_logic;
	signal \92\ : std_logic;
	signal \89\ : std_logic;
	signal \90\ : std_logic;
	signal \116\ : std_logic;
	signal \114\ : std_logic;
	signal \115\ : std_logic;
	signal \112\ : std_logic;
	signal \113\ : std_logic;
	signal \110\ : std_logic;
	signal \111\ : std_logic;
	signal \123\ : std_logic;
	signal \121\ : std_logic;
	signal \122\ : std_logic;
	signal \119\ : std_logic;
	signal \120\ : std_logic;
	signal \117\ : std_logic;
	signal \118\ : std_logic;
	signal \102\ : std_logic;
	signal \100\ : std_logic;
	signal \101\ : std_logic;
	signal \98\ : std_logic;
	signal \99\ : std_logic;
	signal \96\ : std_logic;
	signal \97\ : std_logic;
	signal \130\ : std_logic;
	signal \128\ : std_logic;
	signal \129\ : std_logic;
	signal \126\ : std_logic;
	signal \127\ : std_logic;
	signal \124\ : std_logic;
	signal \125\ : std_logic;
	signal \137\ : std_logic;
	signal \135\ : std_logic;
	signal \136\ : std_logic;
	signal \133\ : std_logic;
	signal \134\ : std_logic;
	signal \131\ : std_logic;
	signal \132\ : std_logic;
	signal \56\ : std_logic;
	signal \54\ : std_logic;
	signal \55\ : std_logic;
	signal \52\ : std_logic;
	signal \53\ : std_logic;
	signal \50\ : std_logic;
	signal \51\ : std_logic;
	signal \21\ : std_logic;
	signal \18\ : std_logic;
	signal \19\ : std_logic;
	signal \16\ : std_logic;
	signal \17\ : std_logic;
	signal \14\ : std_logic;
	signal \15\ : std_logic;
	signal \13\ : std_logic;
	signal \83\ : std_logic;
	signal \12\ : std_logic;
	signal \81\ : std_logic;
	signal \82\ : std_logic;
	signal \79\ : std_logic;
	signal \80\ : std_logic;
	signal \49\ : std_logic;
	signal \47\ : std_logic;
	signal \48\ : std_logic;
	signal \45\ : std_logic;
	signal \46\ : std_logic;
	signal \43\ : std_logic;
	signal \44\ : std_logic;
	signal \35\ : std_logic;
	signal \33\ : std_logic;
	signal \34\ : std_logic;
	signal \31\ : std_logic;
	signal \32\ : std_logic;
	signal \29\ : std_logic;
	signal \30\ : std_logic;
	signal \42\ : std_logic;
	signal \40\ : std_logic;
	signal \41\ : std_logic;
	signal \38\ : std_logic;
	signal \39\ : std_logic;
	signal \36\ : std_logic;
	signal \37\ : std_logic;
	signal \78\ : std_logic;
	signal \76\ : std_logic;
	signal \77\ : std_logic;
	signal \74\ : std_logic;
	signal \75\ : std_logic;
	signal \72\ : std_logic;
	signal \73\ : std_logic;
	signal \28\ : std_logic;
	signal \26\ : std_logic;
	signal \27\ : std_logic;
	signal \24\ : std_logic;
	signal \25\ : std_logic;
	signal \22\ : std_logic;
	signal \23\ : std_logic;
begin
	CLK_AUTOBUF : AUTO_IBUF
		port map( I => CLK, O => \PLD1/CLK\ );
	vgaRed0_AUTOBUF : AUTO_OBUF
		port map( I => \PLD23/VGA_RED\, O => vgaRed0 );
	vgaRed1_AUTOBUF : AUTO_OBUF
		port map( I => \PLD23/VGA_RED\, O => vgaRed1 );
	vgaRed2_AUTOBUF : AUTO_OBUF
		port map( I => \PLD23/VGA_RED\, O => vgaRed2 );
	vgaRed3_AUTOBUF : AUTO_OBUF
		port map( I => \PLD23/VGA_RED\, O => vgaRed3 );
	vgaBlue0_AUTOBUF : AUTO_OBUF
		port map( I => \PLD23/VGA_BLUE\, O => vgaBlue0 );
	vgaBlue1_AUTOBUF : AUTO_OBUF
		port map( I => \PLD23/VGA_BLUE\, O => vgaBlue1 );
	vgaBlue2_AUTOBUF : AUTO_OBUF
		port map( I => \PLD23/VGA_BLUE\, O => vgaBlue2 );
	vgaBlue3_AUTOBUF : AUTO_OBUF
		port map( I => \PLD23/VGA_BLUE\, O => vgaBlue3 );
	vgaGreen0_AUTOBUF : AUTO_OBUF
		port map( I => \PLD23/VGA_GREEN\, O => vgaGreen0 );
	vgaGreen1_AUTOBUF : AUTO_OBUF
		port map( I => \PLD23/VGA_GREEN\, O => vgaGreen1 );
	vgaGreen2_AUTOBUF : AUTO_OBUF
		port map( I => \PLD23/VGA_GREEN\, O => vgaGreen2 );
	vgaGreen3_AUTOBUF : AUTO_OBUF
		port map( I => \PLD23/VGA_GREEN\, O => vgaGreen3 );
	Hsync_AUTOBUF : AUTO_OBUF
		port map( I => \PLD14/Hsync\, O => Hsync );
	Vsync_AUTOBUF : AUTO_OBUF
		port map( I => \PLD14/Vsync\, O => Vsync );
	AN0_AUTOBUF : AUTO_OBUF
		port map( I => \PLD25/A1\, O => AN0 );
	AN2_AUTOBUF : AUTO_OBUF
		port map( I => \PLD25/A3\, O => AN2 );
	AN1_AUTOBUF : AUTO_OBUF
		port map( I => \PLD25/A2\, O => AN1 );
	AN3_AUTOBUF : AUTO_OBUF
		port map( I => \PLD25/A4\, O => AN3 );
	CA_AUTOBUF : AUTO_OBUF
		port map( I => \PLD25/C1\, O => CA );
	CB_AUTOBUF : AUTO_OBUF
		port map( I => \PLD25/C2\, O => CB );
	CC_AUTOBUF : AUTO_OBUF
		port map( I => \PLD25/C3\, O => CC );
	CD_AUTOBUF : AUTO_OBUF
		port map( I => \PLD25/C4\, O => CD );
	CE_AUTOBUF : AUTO_OBUF
		port map( I => \PLD25/C5\, O => CE );
	CF_AUTOBUF : AUTO_OBUF
		port map( I => \PLD25/C6\, O => CF );
	CG_AUTOBUF : AUTO_OBUF
		port map( I => \PLD25/C7\, O => CG );
	SW0_AUTOBUF : AUTO_IBUF
		port map( I => SW0, O => \PLD25/S0\ );
	SW4_AUTOBUF : AUTO_IBUF
		port map( I => SW4, O => \PLD25/S4\ );
	SW8_AUTOBUF : AUTO_IBUF
		port map( I => SW8, O => \PLD25/S8\ );
	SW1_AUTOBUF : AUTO_IBUF
		port map( I => SW1, O => \PLD25/S1\ );
	SW2_AUTOBUF : AUTO_IBUF
		port map( I => SW2, O => \PLD25/S2\ );
	SW3_AUTOBUF : AUTO_IBUF
		port map( I => SW3, O => \PLD25/S3\ );
	SW5_AUTOBUF : AUTO_IBUF
		port map( I => SW5, O => \PLD25/S5\ );
	SW6_AUTOBUF : AUTO_IBUF
		port map( I => SW6, O => \PLD25/S6\ );
	SW7_AUTOBUF : AUTO_IBUF
		port map( I => SW7, O => \PLD25/S7\ );
	SW9_AUTOBUF : AUTO_IBUF
		port map( I => SW9, O => \PLD25/S9\ );
	SW10_AUTOBUF : AUTO_IBUF
		port map( I => SW10, O => \PLD25/S10\ );
	SW11_AUTOBUF : AUTO_IBUF
		port map( I => SW11, O => \PLD25/S11\ );
	SW12_AUTOBUF : AUTO_IBUF
		port map( I => SW12, O => \PLD25/S12\ );
	SW13_AUTOBUF : AUTO_IBUF
		port map( I => SW13, O => \PLD25/S13\ );
	SW14_AUTOBUF : AUTO_IBUF
		port map( I => SW14, O => \PLD25/S14\ );
	SW15_AUTOBUF : AUTO_IBUF
		port map( I => SW15, O => \PLD25/S15\ );
	U104 : OR2_NI
		port map( A => \PLD14/vblank\, B => \PLD14/hblank\, Y => \PLD23/EN\ );
	U1 : DIGITAL_HIGH_NI
		port map( Y => \1\ );
	U2 : DIGITAL_HIGH_NI
		port map( Y => \2\ );
	U3 : DIGITAL_HIGH_NI
		port map( Y => \3\ );
	U4 : CNTR_4BIN_S_NI
		port map( QA => open, QB => \PLD1/CLOCKA\, QC => open, QD => open, RCO => open, A => \1\, B => \1\, C => \1\, D => \1\, ENP => \1\, ENT => \1\, LOAD => \1\, CLR => \1\, CLK => \PLD1/CLK\ );
	U5 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \4\, A => \2\, B => \2\, C => \2\, D => \2\, ENP => \2\, ENT => \2\, LOAD => \2\, CLR => \2\, CLK => \PLD1/CLK\ );
	U6 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \5\, A => \2\, B => \2\, C => \2\, D => \2\, ENP => \2\, ENT => \2\, LOAD => \2\, CLR => \2\, CLK => \4\ );
	U7 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \6\, A => \2\, B => \2\, C => \2\, D => \2\, ENP => \2\, ENT => \2\, LOAD => \2\, CLR => \2\, CLK => \5\ );
	U8 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \7\, A => \2\, B => \2\, C => \2\, D => \2\, ENP => \2\, ENT => \2\, LOAD => \2\, CLR => \2\, CLK => \6\ );
	U9 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \8\, A => \2\, B => \2\, C => \2\, D => \2\, ENP => \2\, ENT => \2\, LOAD => \2\, CLR => \2\, CLK => \7\ );
	U10 : FF_T_CLR_CO_NI
		port map( T => \2\, Q => \PLD1/CLOCKB\, Qneg => open, CLR => \2\, CLK => \8\ );
	U11 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \9\, A => \3\, B => \3\, C => \3\, D => \3\, ENP => \3\, ENT => \3\, LOAD => \3\, CLR => \3\, CLK => \8\ );
	U12 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \10\, A => \3\, B => \3\, C => \3\, D => \3\, ENP => \3\, ENT => \3\, LOAD => \3\, CLR => \3\, CLK => \9\ );
	U13 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \11\, A => \3\, B => \3\, C => \3\, D => \3\, ENP => \3\, ENT => \3\, LOAD => \3\, CLR => \3\, CLK => \10\ );
	U14 : FF_T_CLR_CO_NI
		port map( T => \3\, Q => \PLD1/CLOCKC\, Qneg => open, CLR => \3\, CLK => \11\ );
	U83 : DIGITAL_HIGH_NI
		port map( Y => \PLD15/B5\ );
	U84 : DIGITAL_LOW_NI
		port map( Y => \PLD15/B1\ );
	U85 : DIGITAL_HIGH_NI
		port map( Y => \PLD16/B6\ );
	U86 : DIGITAL_LOW_NI
		port map( Y => \PLD16/B1\ );
	U87 : DIGITAL_HIGH_NI
		port map( Y => \PLD17/B5\ );
	U88 : DIGITAL_LOW_NI
		port map( Y => \PLD17/B1\ );
	U89 : DIGITAL_HIGH_NI
		port map( Y => \PLD18/B7\ );
	U90 : DIGITAL_LOW_NI
		port map( Y => \PLD18/B1\ );
	U91 : DIGITAL_HIGH_NI
		port map( Y => \PLD19/B5\ );
	U92 : DIGITAL_LOW_NI
		port map( Y => \PLD19/B1\ );
	U93 : DIGITAL_HIGH_NI
		port map( Y => \PLD20/B6\ );
	U94 : DIGITAL_LOW_NI
		port map( Y => \PLD20/B1\ );
	U95 : DIGITAL_HIGH_NI
		port map( Y => \PLD21/B5\ );
	U96 : DIGITAL_LOW_NI
		port map( Y => \PLD21/B1\ );
	U99 : OR7_NI
		port map( A => \PLD15/OAEQB\, B => \PLD16/OAEQB\, Y => \20\, C => \PLD17/OAEQB\, D => \PLD18/OAEQB\, E => \PLD19/OAEQB\, F => \PLD20/OAEQB\, G => \PLD21/OAEQB\ );
	U100 : CNTR_7BIN_NI
		port map( Q1 => \84\, Q2 => \85\, Q3 => \86\, Q4 => open, Q5 => open, MR => \PLD23/h_complete\, CP => \20\, Q6 => open, Q7 => open );
	U101 : MUX8_1_NI
		port map( D0 => \87\, D1 => \87\, D2 => \58\, D3 => \58\, D4 => \87\, D5 => \87\, D6 => \58\, D7 => \58\, A => \84\, C => \86\, B => \85\, Y => \PLD23/VGA_RED\, G => \PLD23/EN\ );
	U102 : MUX8_1_NI
		port map( D0 => \87\, D1 => \87\, D2 => \87\, D3 => \87\, D4 => \58\, D5 => \58\, D6 => \58\, D7 => \58\, A => \84\, C => \86\, B => \85\, Y => \PLD23/VGA_GREEN\, G => \PLD23/EN\ );
	U103 : MUX8_1_NI
		port map( D0 => \87\, D1 => \58\, D2 => \87\, D3 => \58\, D4 => \87\, D5 => \58\, D6 => \87\, D7 => \58\, A => \84\, C => \86\, B => \85\, Y => \PLD23/VGA_BLUE\, G => \PLD23/EN\ );
	U105 : DIGITAL_HIGH_NI
		port map( Y => \87\ );
	U143 : DIGITAL_LOW_NI
		port map( Y => \58\ );
	U106 : COMP_4_NI
		port map( A2 => \PLD23/bit3\, B2 => \PLD15/B1\, A1 => \PLD23/bit2\, B1 => \PLD15/B1\, OAGTB => \89\, A0 => \PLD23/bit1\, B0 => \PLD15/B1\, A3 => \PLD23/bit4\, B3 => \PLD15/B1\, OAEQB => \90\, OALTB => \91\, AEQB => \PLD15/B5\, ALTB => \PLD15/B1\, AGTB => \PLD15/B1\ );
	U107 : COMP_4_NI
		port map( A2 => \PLD23/bit7\, B2 => \PLD15/B5\, A1 => \PLD23/bit6\, B1 => \PLD15/B1\, OAGTB => \92\, A0 => \PLD23/bit5\, B0 => \PLD15/B5\, A3 => \PLD23/bit8\, B3 => \PLD15/B1\, OAEQB => \93\, OALTB => \94\, AEQB => \90\, ALTB => \91\, AGTB => \89\ );
	U108 : COMP_4_NI
		port map( A2 => \95\, B2 => \95\, A1 => \PLD23/bit10\, B1 => \PLD15/B1\, OAGTB => \PLD15/OAGTB\, A0 => \PLD23/bit9\, B0 => \PLD15/B1\, A3 => \95\, B3 => \95\, OAEQB => \PLD15/OAEQB\, OALTB => \PLD15/OALTB\, AEQB => \93\, ALTB => \94\, AGTB => \92\ );
	U109 : DIGITAL_LOW_NI
		port map( Y => \95\ );
	U110 : COMP_4_NI
		port map( A2 => \PLD23/bit3\, B2 => \PLD16/B1\, A1 => \PLD23/bit2\, B1 => \PLD16/B1\, OAGTB => \96\, A0 => \PLD23/bit1\, B0 => \PLD16/B1\, A3 => \PLD23/bit4\, B3 => \PLD16/B1\, OAEQB => \97\, OALTB => \98\, AEQB => \PLD16/B6\, ALTB => \PLD16/B1\, AGTB => \PLD16/B1\ );
	U111 : COMP_4_NI
		port map( A2 => \PLD23/bit7\, B2 => \PLD16/B1\, A1 => \PLD23/bit6\, B1 => \PLD16/B6\, OAGTB => \99\, A0 => \PLD23/bit5\, B0 => \PLD16/B1\, A3 => \PLD23/bit8\, B3 => \PLD16/B6\, OAEQB => \100\, OALTB => \101\, AEQB => \97\, ALTB => \98\, AGTB => \96\ );
	U112 : COMP_4_NI
		port map( A2 => \102\, B2 => \102\, A1 => \PLD23/bit10\, B1 => \PLD16/B1\, OAGTB => \PLD16/OAGTB\, A0 => \PLD23/bit9\, B0 => \PLD16/B1\, A3 => \102\, B3 => \102\, OAEQB => \PLD16/OAEQB\, OALTB => \PLD16/OALTB\, AEQB => \100\, ALTB => \101\, AGTB => \99\ );
	U113 : DIGITAL_LOW_NI
		port map( Y => \102\ );
	U114 : COMP_4_NI
		port map( A2 => \PLD23/bit3\, B2 => \PLD17/B1\, A1 => \PLD23/bit2\, B1 => \PLD17/B1\, OAGTB => \103\, A0 => \PLD23/bit1\, B0 => \PLD17/B1\, A3 => \PLD23/bit4\, B3 => \PLD17/B1\, OAEQB => \104\, OALTB => \105\, AEQB => \PLD17/B5\, ALTB => \PLD17/B1\, AGTB => \PLD17/B1\ );
	U115 : COMP_4_NI
		port map( A2 => \PLD23/bit7\, B2 => \PLD17/B5\, A1 => \PLD23/bit6\, B1 => \PLD17/B5\, OAGTB => \106\, A0 => \PLD23/bit5\, B0 => \PLD17/B5\, A3 => \PLD23/bit8\, B3 => \PLD17/B5\, OAEQB => \107\, OALTB => \108\, AEQB => \104\, ALTB => \105\, AGTB => \103\ );
	U116 : COMP_4_NI
		port map( A2 => \109\, B2 => \109\, A1 => \PLD23/bit10\, B1 => \PLD17/B1\, OAGTB => \PLD17/OAGTB\, A0 => \PLD23/bit9\, B0 => \PLD17/B1\, A3 => \109\, B3 => \109\, OAEQB => \PLD17/OAEQB\, OALTB => \PLD17/OALTB\, AEQB => \107\, ALTB => \108\, AGTB => \106\ );
	U117 : DIGITAL_LOW_NI
		port map( Y => \109\ );
	U118 : COMP_4_NI
		port map( A2 => \PLD23/bit3\, B2 => \PLD18/B1\, A1 => \PLD23/bit2\, B1 => \PLD18/B1\, OAGTB => \110\, A0 => \PLD23/bit1\, B0 => \PLD18/B1\, A3 => \PLD23/bit4\, B3 => \PLD18/B1\, OAEQB => \111\, OALTB => \112\, AEQB => \PLD18/B7\, ALTB => \PLD18/B1\, AGTB => \PLD18/B1\ );
	U119 : COMP_4_NI
		port map( A2 => \PLD23/bit7\, B2 => \PLD18/B7\, A1 => \PLD23/bit6\, B1 => \PLD18/B1\, OAGTB => \113\, A0 => \PLD23/bit5\, B0 => \PLD18/B1\, A3 => \PLD23/bit8\, B3 => \PLD18/B1\, OAEQB => \114\, OALTB => \115\, AEQB => \111\, ALTB => \112\, AGTB => \110\ );
	U120 : COMP_4_NI
		port map( A2 => \116\, B2 => \116\, A1 => \PLD23/bit10\, B1 => \PLD18/B1\, OAGTB => \PLD18/OAGTB\, A0 => \PLD23/bit9\, B0 => \PLD18/B7\, A3 => \116\, B3 => \116\, OAEQB => \PLD18/OAEQB\, OALTB => \PLD18/OALTB\, AEQB => \114\, ALTB => \115\, AGTB => \113\ );
	U121 : DIGITAL_LOW_NI
		port map( Y => \116\ );
	U122 : COMP_4_NI
		port map( A2 => \PLD23/bit3\, B2 => \PLD19/B1\, A1 => \PLD23/bit2\, B1 => \PLD19/B1\, OAGTB => \117\, A0 => \PLD23/bit1\, B0 => \PLD19/B1\, A3 => \PLD23/bit4\, B3 => \PLD19/B1\, OAEQB => \118\, OALTB => \119\, AEQB => \PLD19/B5\, ALTB => \PLD19/B1\, AGTB => \PLD19/B1\ );
	U123 : COMP_4_NI
		port map( A2 => \PLD23/bit7\, B2 => \PLD19/B1\, A1 => \PLD23/bit6\, B1 => \PLD19/B1\, OAGTB => \120\, A0 => \PLD23/bit5\, B0 => \PLD19/B5\, A3 => \PLD23/bit8\, B3 => \PLD19/B5\, OAEQB => \121\, OALTB => \122\, AEQB => \118\, ALTB => \119\, AGTB => \117\ );
	U124 : COMP_4_NI
		port map( A2 => \123\, B2 => \123\, A1 => \PLD23/bit10\, B1 => \PLD19/B1\, OAGTB => \PLD19/OAGTB\, A0 => \PLD23/bit9\, B0 => \PLD19/B5\, A3 => \123\, B3 => \123\, OAEQB => \PLD19/OAEQB\, OALTB => \PLD19/OALTB\, AEQB => \121\, ALTB => \122\, AGTB => \120\ );
	U125 : DIGITAL_LOW_NI
		port map( Y => \123\ );
	U126 : COMP_4_NI
		port map( A2 => \PLD23/bit3\, B2 => \PLD20/B1\, A1 => \PLD23/bit2\, B1 => \PLD20/B1\, OAGTB => \124\, A0 => \PLD23/bit1\, B0 => \PLD20/B1\, A3 => \PLD23/bit4\, B3 => \PLD20/B1\, OAEQB => \125\, OALTB => \126\, AEQB => \PLD20/B6\, ALTB => \PLD20/B1\, AGTB => \PLD20/B1\ );
	U127 : COMP_4_NI
		port map( A2 => \PLD23/bit7\, B2 => \PLD20/B6\, A1 => \PLD23/bit6\, B1 => \PLD20/B6\, OAGTB => \127\, A0 => \PLD23/bit5\, B0 => \PLD20/B1\, A3 => \PLD23/bit8\, B3 => \PLD20/B6\, OAEQB => \128\, OALTB => \129\, AEQB => \125\, ALTB => \126\, AGTB => \124\ );
	U128 : COMP_4_NI
		port map( A2 => \130\, B2 => \130\, A1 => \PLD23/bit10\, B1 => \PLD20/B1\, OAGTB => \PLD20/OAGTB\, A0 => \PLD23/bit9\, B0 => \PLD20/B6\, A3 => \130\, B3 => \130\, OAEQB => \PLD20/OAEQB\, OALTB => \PLD20/OALTB\, AEQB => \128\, ALTB => \129\, AGTB => \127\ );
	U129 : DIGITAL_LOW_NI
		port map( Y => \130\ );
	U130 : COMP_4_NI
		port map( A2 => \PLD23/bit3\, B2 => \PLD21/B1\, A1 => \PLD23/bit2\, B1 => \PLD21/B1\, OAGTB => \131\, A0 => \PLD23/bit1\, B0 => \PLD21/B1\, A3 => \PLD23/bit4\, B3 => \PLD21/B1\, OAEQB => \132\, OALTB => \133\, AEQB => \PLD21/B5\, ALTB => \PLD21/B1\, AGTB => \PLD21/B1\ );
	U131 : COMP_4_NI
		port map( A2 => \PLD23/bit7\, B2 => \PLD21/B1\, A1 => \PLD23/bit6\, B1 => \PLD21/B5\, OAGTB => \134\, A0 => \PLD23/bit5\, B0 => \PLD21/B5\, A3 => \PLD23/bit8\, B3 => \PLD21/B1\, OAEQB => \135\, OALTB => \136\, AEQB => \132\, ALTB => \133\, AGTB => \131\ );
	U132 : COMP_4_NI
		port map( A2 => \137\, B2 => \137\, A1 => \PLD23/bit10\, B1 => \PLD21/B5\, OAGTB => \PLD21/OAGTB\, A0 => \PLD23/bit9\, B0 => \PLD21/B1\, A3 => \137\, B3 => \137\, OAEQB => \PLD21/OAEQB\, OALTB => \PLD21/OALTB\, AEQB => \135\, ALTB => \136\, AGTB => \134\ );
	U133 : DIGITAL_LOW_NI
		port map( Y => \137\ );
	U97 : DEC_BCD_7_NI
		port map( A => \172\, B => \173\, C => \174\, D => \175\, Y0 => \PLD25/C1\, Y3 => \PLD25/C4\, Y4 => \PLD25/C5\, Y5 => \PLD25/C6\, Y2 => \PLD25/C3\, Y1 => \PLD25/C2\, Y6 => \PLD25/C7\, LT => \176\, RBI => \176\, BI => \176\ );
	U98 : MUX4_1_NI
		port map( S0 => \177\, S1 => \178\, EN => \179\, Y => \172\, I0 => \PLD25/S0\, I1 => \PLD25/S4\, I2 => \PLD25/S8\, I3 => \PLD25/S12\ );
	U134 : MUX4_1_NI
		port map( S0 => \177\, S1 => \178\, EN => \179\, Y => \173\, I0 => \PLD25/S1\, I1 => \PLD25/S5\, I2 => \PLD25/S9\, I3 => \PLD25/S13\ );
	U135 : MUX4_1_NI
		port map( S0 => \177\, S1 => \178\, EN => \179\, Y => \174\, I0 => \PLD25/S2\, I1 => \PLD25/S6\, I2 => \PLD25/S10\, I3 => \PLD25/S14\ );
	U136 : MUX4_1_NI
		port map( S0 => \177\, S1 => \178\, EN => \179\, Y => \175\, I0 => \PLD25/S3\, I1 => \PLD25/S7\, I2 => \PLD25/S11\, I3 => \PLD25/S15\ );
	U137 : DIGITAL_LOW_NI
		port map( Y => \179\ );
	U138 : DIGITAL_HIGH_NI
		port map( Y => \180\ );
	U139 : CNTR_4BIN_S_NI
		port map( QA => \177\, QB => \178\, QC => open, QD => open, RCO => open, A => \180\, B => \180\, C => \180\, D => \180\, ENP => \180\, ENT => \180\, LOAD => \180\, CLR => \180\, CLK => \PLD1/CLOCKB\ );
	U140 : DEC2_4_NI
		port map( Y0 => \PLD25/A1\, Y1 => \PLD25/A2\, Y2 => \PLD25/A3\, Y3 => \PLD25/A4\, A => \177\, B => \178\, EN => \179\ );
	U141 : DIGITAL_HIGH_NI
		port map( Y => \176\ );
	U20 : FF_JK_NSCLR_CO_NI
		port map( Q => open, Qneg => \PLD14/Hsync\, PR => \PLD7/B1\, K => \62\, CLR => \PLD7/B1\, J => \63\, CLK => \PLD1/CLOCKA\ );
	U21 : FF_JK_NSCLR_CO_NI
		port map( Q => \PLD14/hblank\, Qneg => open, PR => \64\, K => \PLD23/h_complete\, CLR => \64\, J => \65\, CLK => \PLD1/CLOCKA\ );
	U22 : DIGITAL_HIGH_NI
		port map( Y => \PLD3/B1\ );
	U23 : DIGITAL_LOW_NI
		port map( Y => \PLD3/B8\ );
	U24 : DIGITAL_HIGH_NI
		port map( Y => \PLD7/B1\ );
	U25 : DIGITAL_LOW_NI
		port map( Y => \PLD7/B6\ );
	U26 : DIGITAL_HIGH_NI
		port map( Y => \PLD4/B1\ );
	U27 : DIGITAL_LOW_NI
		port map( Y => \PLD4/B5\ );
	U28 : DIGITAL_HIGH_NI
		port map( Y => \PLD5/B1\ );
	U29 : DIGITAL_LOW_NI
		port map( Y => \PLD5/B5\ );
	U30 : BUF_NI
		port map( Y => \65\, A => \PLD3/OAEQB\ );
	U31 : BUF_NI
		port map( Y => \63\, A => \PLD4/OAEQB\ );
	U33 : BUF_NI
		port map( Y => \62\, A => \PLD5/OAEQB\ );
	U35 : DIGITAL_HIGH_NI
		port map( Y => \64\ );
	U32 : FF_D_CO_NI
		port map( D => \PLD7/OAEQB\, Q => \PLD23/h_complete\, CLK => \66\, Qneg => open );
	U34 : INV_NI
		port map( Y => \66\, A => \PLD1/CLOCKA\ );
	U56 : FF_JK_NSCLR_CO_NI
		port map( Q => open, Qneg => \PLD14/Vsync\, PR => \PLD12/B4\, K => \67\, CLR => \PLD12/B4\, J => \68\, CLK => \PLD23/h_complete\ );
	U57 : FF_JK_NSCLR_CO_NI
		port map( Q => \PLD14/vblank\, Qneg => open, PR => \69\, K => \PLD8/CLR\, CLR => \69\, J => \70\, CLK => \PLD23/h_complete\ );
	U58 : DIGITAL_HIGH_NI
		port map( Y => \PLD9/B1\ );
	U59 : DIGITAL_LOW_NI
		port map( Y => \PLD9/B6\ );
	U60 : DIGITAL_HIGH_NI
		port map( Y => \PLD12/B4\ );
	U61 : DIGITAL_LOW_NI
		port map( Y => \PLD12/B1\ );
	U62 : DIGITAL_HIGH_NI
		port map( Y => \PLD10/B1\ );
	U63 : DIGITAL_LOW_NI
		port map( Y => \PLD10/B2\ );
	U64 : DIGITAL_HIGH_NI
		port map( Y => \PLD11/B1\ );
	U65 : DIGITAL_LOW_NI
		port map( Y => \PLD11/B3\ );
	U66 : BUF_NI
		port map( Y => \70\, A => \PLD9/OAEQB\ );
	U67 : BUF_NI
		port map( Y => \68\, A => \PLD10/OAEQB\ );
	U68 : BUF_NI
		port map( Y => \67\, A => \PLD11/OAEQB\ );
	U69 : DIGITAL_HIGH_NI
		port map( Y => \69\ );
	U70 : FF_D_CO_NI
		port map( D => \PLD12/OAEQB\, Q => \PLD8/CLR\, CLK => \71\, Qneg => open );
	U71 : INV_NI
		port map( Y => \71\, A => \PLD23/h_complete\ );
	U15 : CNTR_7BIN_NI
		port map( Q1 => \PLD23/bit1\, Q2 => \PLD23/bit2\, Q3 => \PLD23/bit3\, Q4 => \PLD23/bit4\, Q5 => \PLD23/bit5\, MR => \PLD23/h_complete\, CP => \PLD1/CLOCKA\, Q6 => \PLD23/bit6\, Q7 => \PLD23/bit7\ );
	U16 : CNTR_7BIN_NI
		port map( Q1 => \PLD23/bit8\, Q2 => \PLD23/bit9\, Q3 => \PLD23/bit10\, Q4 => open, Q5 => open, MR => \PLD23/h_complete\, CP => \PLD23/bit7\, Q6 => open, Q7 => open );
	U17 : COMP_4_NI
		port map( A2 => \PLD23/bit3\, B2 => \PLD3/B1\, A1 => \PLD23/bit2\, B1 => \PLD3/B1\, OAGTB => \72\, A0 => \PLD23/bit1\, B0 => \PLD3/B1\, A3 => \PLD23/bit4\, B3 => \PLD3/B1\, OAEQB => \73\, OALTB => \74\, AEQB => \PLD3/B1\, ALTB => \PLD3/B8\, AGTB => \PLD3/B8\ );
	U18 : COMP_4_NI
		port map( A2 => \PLD23/bit7\, B2 => \PLD3/B1\, A1 => \PLD23/bit6\, B1 => \PLD3/B1\, OAGTB => \75\, A0 => \PLD23/bit5\, B0 => \PLD3/B1\, A3 => \PLD23/bit8\, B3 => \PLD3/B8\, OAEQB => \76\, OALTB => \77\, AEQB => \73\, ALTB => \74\, AGTB => \72\ );
	U19 : COMP_4_NI
		port map( A2 => \78\, B2 => \78\, A1 => \PLD23/bit10\, B1 => \PLD3/B1\, OAGTB => \PLD3/OAGTB\, A0 => \PLD23/bit9\, B0 => \PLD3/B8\, A3 => \78\, B3 => \78\, OAEQB => \PLD3/OAEQB\, OALTB => \PLD3/OALTB\, AEQB => \76\, ALTB => \77\, AGTB => \75\ );
	U36 : DIGITAL_LOW_NI
		port map( Y => \78\ );
	U37 : COMP_4_NI
		port map( A2 => \PLD23/bit3\, B2 => \PLD4/B1\, A1 => \PLD23/bit2\, B1 => \PLD4/B1\, OAGTB => \79\, A0 => \PLD23/bit1\, B0 => \PLD4/B1\, A3 => \PLD23/bit4\, B3 => \PLD4/B1\, OAEQB => \80\, OALTB => \81\, AEQB => \PLD4/B1\, ALTB => \PLD4/B5\, AGTB => \PLD4/B5\ );
	U38 : COMP_4_NI
		port map( A2 => \PLD23/bit7\, B2 => \PLD4/B5\, A1 => \PLD23/bit6\, B1 => \PLD4/B5\, OAGTB => \82\, A0 => \PLD23/bit5\, B0 => \PLD4/B5\, A3 => \PLD23/bit8\, B3 => \PLD4/B1\, OAEQB => \83\, OALTB => \12\, AEQB => \80\, ALTB => \81\, AGTB => \79\ );
	U39 : COMP_4_NI
		port map( A2 => \13\, B2 => \13\, A1 => \PLD23/bit10\, B1 => \PLD4/B1\, OAGTB => \PLD4/OAGTB\, A0 => \PLD23/bit9\, B0 => \PLD4/B5\, A3 => \13\, B3 => \13\, OAEQB => \PLD4/OAEQB\, OALTB => \PLD4/OALTB\, AEQB => \83\, ALTB => \12\, AGTB => \82\ );
	U40 : DIGITAL_LOW_NI
		port map( Y => \13\ );
	U41 : COMP_4_NI
		port map( A2 => \PLD23/bit3\, B2 => \PLD5/B1\, A1 => \PLD23/bit2\, B1 => \PLD5/B1\, OAGTB => \14\, A0 => \PLD23/bit1\, B0 => \PLD5/B1\, A3 => \PLD23/bit4\, B3 => \PLD5/B1\, OAEQB => \15\, OALTB => \16\, AEQB => \PLD5/B1\, ALTB => \PLD5/B5\, AGTB => \PLD5/B5\ );
	U42 : COMP_4_NI
		port map( A2 => \PLD23/bit7\, B2 => \PLD5/B1\, A1 => \PLD23/bit6\, B1 => \PLD5/B1\, OAGTB => \17\, A0 => \PLD23/bit5\, B0 => \PLD5/B5\, A3 => \PLD23/bit8\, B3 => \PLD5/B1\, OAEQB => \18\, OALTB => \19\, AEQB => \15\, ALTB => \16\, AGTB => \14\ );
	U43 : COMP_4_NI
		port map( A2 => \21\, B2 => \21\, A1 => \PLD23/bit10\, B1 => \PLD5/B1\, OAGTB => \PLD5/OAGTB\, A0 => \PLD23/bit9\, B0 => \PLD5/B5\, A3 => \21\, B3 => \21\, OAEQB => \PLD5/OAEQB\, OALTB => \PLD5/OALTB\, AEQB => \18\, ALTB => \19\, AGTB => \17\ );
	U44 : DIGITAL_LOW_NI
		port map( Y => \21\ );
	U45 : COMP_4_NI
		port map( A2 => \PLD23/bit3\, B2 => \PLD7/B1\, A1 => \PLD23/bit2\, B1 => \PLD7/B1\, OAGTB => \22\, A0 => \PLD23/bit1\, B0 => \PLD7/B1\, A3 => \PLD23/bit4\, B3 => \PLD7/B1\, OAEQB => \23\, OALTB => \24\, AEQB => \PLD7/B1\, ALTB => \PLD7/B6\, AGTB => \PLD7/B6\ );
	U46 : COMP_4_NI
		port map( A2 => \PLD23/bit7\, B2 => \PLD7/B6\, A1 => \PLD23/bit6\, B1 => \PLD7/B6\, OAGTB => \25\, A0 => \PLD23/bit5\, B0 => \PLD7/B1\, A3 => \PLD23/bit8\, B3 => \PLD7/B6\, OAEQB => \26\, OALTB => \27\, AEQB => \23\, ALTB => \24\, AGTB => \22\ );
	U47 : COMP_4_NI
		port map( A2 => \28\, B2 => \28\, A1 => \PLD23/bit10\, B1 => \PLD7/B1\, OAGTB => \PLD7/OAGTB\, A0 => \PLD23/bit9\, B0 => \PLD7/B1\, A3 => \28\, B3 => \28\, OAEQB => \PLD7/OAEQB\, OALTB => \PLD7/OALTB\, AEQB => \26\, ALTB => \27\, AGTB => \25\ );
	U48 : DIGITAL_LOW_NI
		port map( Y => \28\ );
	U49 : CNTR_7BIN_NI
		port map( Q1 => \PLD6/bit1\, Q2 => \PLD6/bit2\, Q3 => \PLD6/bit3\, Q4 => \PLD6/bit4\, Q5 => \PLD6/bit5\, MR => \PLD8/CLR\, CP => \PLD23/h_complete\, Q6 => \PLD6/bit6\, Q7 => \PLD6/bit7\ );
	U50 : CNTR_7BIN_NI
		port map( Q1 => \PLD6/bit8\, Q2 => \PLD6/bit9\, Q3 => \PLD6/bit10\, Q4 => open, Q5 => open, MR => \PLD8/CLR\, CP => \PLD6/bit7\, Q6 => open, Q7 => open );
	U51 : COMP_4_NI
		port map( A2 => \PLD6/bit3\, B2 => \PLD9/B1\, A1 => \PLD6/bit2\, B1 => \PLD9/B1\, OAGTB => \29\, A0 => \PLD6/bit1\, B0 => \PLD9/B1\, A3 => \PLD6/bit4\, B3 => \PLD9/B1\, OAEQB => \30\, OALTB => \31\, AEQB => \PLD9/B1\, ALTB => \PLD9/B6\, AGTB => \PLD9/B6\ );
	U52 : COMP_4_NI
		port map( A2 => \PLD6/bit7\, B2 => \PLD9/B1\, A1 => \PLD6/bit6\, B1 => \PLD9/B6\, OAGTB => \32\, A0 => \PLD6/bit5\, B0 => \PLD9/B1\, A3 => \PLD6/bit8\, B3 => \PLD9/B1\, OAEQB => \33\, OALTB => \34\, AEQB => \30\, ALTB => \31\, AGTB => \29\ );
	U53 : COMP_4_NI
		port map( A2 => \35\, B2 => \35\, A1 => \PLD6/bit10\, B1 => \PLD9/B6\, OAGTB => \PLD9/OAGTB\, A0 => \PLD6/bit9\, B0 => \PLD9/B1\, A3 => \35\, B3 => \35\, OAEQB => \PLD9/OAEQB\, OALTB => \PLD9/OALTB\, AEQB => \33\, ALTB => \34\, AGTB => \32\ );
	U54 : DIGITAL_LOW_NI
		port map( Y => \35\ );
	U55 : COMP_4_NI
		port map( A2 => \PLD6/bit3\, B2 => \PLD10/B2\, A1 => \PLD6/bit2\, B1 => \PLD10/B2\, OAGTB => \36\, A0 => \PLD6/bit1\, B0 => \PLD10/B1\, A3 => \PLD6/bit4\, B3 => \PLD10/B1\, OAEQB => \37\, OALTB => \38\, AEQB => \PLD10/B1\, ALTB => \PLD10/B2\, AGTB => \PLD10/B2\ );
	U72 : COMP_4_NI
		port map( A2 => \PLD6/bit7\, B2 => \PLD10/B1\, A1 => \PLD6/bit6\, B1 => \PLD10/B1\, OAGTB => \39\, A0 => \PLD6/bit5\, B0 => \PLD10/B2\, A3 => \PLD6/bit8\, B3 => \PLD10/B1\, OAEQB => \40\, OALTB => \41\, AEQB => \37\, ALTB => \38\, AGTB => \36\ );
	U73 : COMP_4_NI
		port map( A2 => \42\, B2 => \42\, A1 => \PLD6/bit10\, B1 => \PLD10/B2\, OAGTB => \PLD10/OAGTB\, A0 => \PLD6/bit9\, B0 => \PLD10/B1\, A3 => \42\, B3 => \42\, OAEQB => \PLD10/OAEQB\, OALTB => \PLD10/OALTB\, AEQB => \40\, ALTB => \41\, AGTB => \39\ );
	U74 : DIGITAL_LOW_NI
		port map( Y => \42\ );
	U75 : COMP_4_NI
		port map( A2 => \PLD6/bit3\, B2 => \PLD11/B3\, A1 => \PLD6/bit2\, B1 => \PLD11/B1\, OAGTB => \43\, A0 => \PLD6/bit1\, B0 => \PLD11/B1\, A3 => \PLD6/bit4\, B3 => \PLD11/B1\, OAEQB => \44\, OALTB => \45\, AEQB => \PLD11/B1\, ALTB => \PLD11/B3\, AGTB => \PLD11/B3\ );
	U76 : COMP_4_NI
		port map( A2 => \PLD6/bit7\, B2 => \PLD11/B1\, A1 => \PLD6/bit6\, B1 => \PLD11/B1\, OAGTB => \46\, A0 => \PLD6/bit5\, B0 => \PLD11/B3\, A3 => \PLD6/bit8\, B3 => \PLD11/B1\, OAEQB => \47\, OALTB => \48\, AEQB => \44\, ALTB => \45\, AGTB => \43\ );
	U77 : COMP_4_NI
		port map( A2 => \49\, B2 => \49\, A1 => \PLD6/bit10\, B1 => \PLD11/B3\, OAGTB => \PLD11/OAGTB\, A0 => \PLD6/bit9\, B0 => \PLD11/B1\, A3 => \49\, B3 => \49\, OAEQB => \PLD11/OAEQB\, OALTB => \PLD11/OALTB\, AEQB => \47\, ALTB => \48\, AGTB => \46\ );
	U78 : DIGITAL_LOW_NI
		port map( Y => \49\ );
	U79 : COMP_4_NI
		port map( A2 => \PLD6/bit3\, B2 => \PLD12/B1\, A1 => \PLD6/bit2\, B1 => \PLD12/B1\, OAGTB => \50\, A0 => \PLD6/bit1\, B0 => \PLD12/B1\, A3 => \PLD6/bit4\, B3 => \PLD12/B4\, OAEQB => \51\, OALTB => \52\, AEQB => \PLD12/B4\, ALTB => \PLD12/B1\, AGTB => \PLD12/B1\ );
	U80 : COMP_4_NI
		port map( A2 => \PLD6/bit7\, B2 => \PLD12/B1\, A1 => \PLD6/bit6\, B1 => \PLD12/B1\, OAGTB => \53\, A0 => \PLD6/bit5\, B0 => \PLD12/B1\, A3 => \PLD6/bit8\, B3 => \PLD12/B1\, OAEQB => \54\, OALTB => \55\, AEQB => \51\, ALTB => \52\, AGTB => \50\ );
	U81 : COMP_4_NI
		port map( A2 => \56\, B2 => \56\, A1 => \PLD6/bit10\, B1 => \PLD12/B4\, OAGTB => \PLD12/OAGTB\, A0 => \PLD6/bit9\, B0 => \PLD12/B1\, A3 => \56\, B3 => \56\, OAEQB => \PLD12/OAEQB\, OALTB => \PLD12/OALTB\, AEQB => \54\, ALTB => \55\, AGTB => \53\ );
	U82 : DIGITAL_LOW_NI
		port map( Y => \56\ );
end behavioral;
